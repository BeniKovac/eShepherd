// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using web.Data;

namespace web.Migrations
{
    [DbContext(typeof(eShepherdContext))]
    [Migration("20201115130903_AppUser")]
    partial class AppUser
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("web.Models.Creda", b =>
                {
                    b.Property<int>("CredeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Opombe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SteviloOvc")
                        .HasColumnType("int");

                    b.HasKey("CredeID");

                    b.ToTable("Crede");
                });

            modelBuilder.Entity("web.Models.Gonitev", b =>
                {
                    b.Property<int>("GonitevID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumGonitve")
                        .HasColumnType("datetime2");

                    b.Property<string>("Opombe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OvcaID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("OvenID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("PredvidenaKotitev")
                        .HasColumnType("datetime2");

                    b.HasKey("GonitevID");

                    b.HasIndex("OvcaID");

                    b.HasIndex("OvenID");

                    b.ToTable("Gonitev");
                });

            modelBuilder.Entity("web.Models.Jagenjcek", b =>
                {
                    b.Property<int>("IdJagenjcka")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdKotitveKotitevID")
                        .HasColumnType("int");

                    b.Property<string>("spol")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdJagenjcka");

                    b.HasIndex("IdKotitveKotitevID");

                    b.ToTable("Jagenjcek");
                });

            modelBuilder.Entity("web.Models.Kotitev", b =>
                {
                    b.Property<int>("KotitevID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumKotitve")
                        .HasColumnType("datetime2");

                    b.Property<string>("Opombe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OvcaID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("OvenID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SteviloMladih")
                        .HasColumnType("int");

                    b.Property<int>("SteviloMrtvih")
                        .HasColumnType("int");

                    b.HasKey("KotitevID");

                    b.HasIndex("OvcaID");

                    b.HasIndex("OvenID");

                    b.ToTable("Kotitev");
                });

            modelBuilder.Entity("web.Models.Ovca", b =>
                {
                    b.Property<string>("OvcaID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("CredaIDCredeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumRojstva")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdMame")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdOceta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opombe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pasma")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PovprecjeJagenjckov")
                        .HasColumnType("int");

                    b.Property<string>("Stanje")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SteviloKotitev")
                        .HasColumnType("int");

                    b.Property<int>("SteviloSorojencev")
                        .HasColumnType("int");

                    b.HasKey("OvcaID");

                    b.HasIndex("CredaIDCredeID");

                    b.ToTable("Ovca");
                });

            modelBuilder.Entity("web.Models.Oven", b =>
                {
                    b.Property<string>("OvenID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("CredaIDCredeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumRojstva")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdMame")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdOceta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opombe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pasma")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Poreklo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stanje")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SteviloSorojencev")
                        .HasColumnType("int");

                    b.HasKey("OvenID");

                    b.HasIndex("CredaIDCredeID");

                    b.ToTable("Oven");
                });

            modelBuilder.Entity("web.Models.Gonitev", b =>
                {
                    b.HasOne("web.Models.Ovca", "Ovca")
                        .WithMany()
                        .HasForeignKey("OvcaID");

                    b.HasOne("web.Models.Oven", "Oven")
                        .WithMany()
                        .HasForeignKey("OvenID");
                });

            modelBuilder.Entity("web.Models.Jagenjcek", b =>
                {
                    b.HasOne("web.Models.Kotitev", "IdKotitve")
                        .WithMany()
                        .HasForeignKey("IdKotitveKotitevID");
                });

            modelBuilder.Entity("web.Models.Kotitev", b =>
                {
                    b.HasOne("web.Models.Ovca", "Ovca")
                        .WithMany("SeznamKotitev")
                        .HasForeignKey("OvcaID");

                    b.HasOne("web.Models.Oven", "Oven")
                        .WithMany()
                        .HasForeignKey("OvenID");
                });

            modelBuilder.Entity("web.Models.Ovca", b =>
                {
                    b.HasOne("web.Models.Creda", "CredaID")
                        .WithMany()
                        .HasForeignKey("CredaIDCredeID");
                });

            modelBuilder.Entity("web.Models.Oven", b =>
                {
                    b.HasOne("web.Models.Creda", "CredaID")
                        .WithMany()
                        .HasForeignKey("CredaIDCredeID");
                });
#pragma warning restore 612, 618
        }
    }
}
